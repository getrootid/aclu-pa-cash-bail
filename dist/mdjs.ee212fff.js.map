{"mappings":"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","sources":["<anon>","src/js/mdjs.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireae46\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireae46\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $9nP1d = parcelRequire(\"9nP1d\");\n\nvar $fzFsw = parcelRequire(\"fzFsw\");\n\nvar $8WpX6 = parcelRequire(\"8WpX6\");\n\nvar $ge6e3 = parcelRequire(\"ge6e3\");\n\nvar $gnvXE = parcelRequire(\"gnvXE\");\n/* TABLE CREATION FUNCTIONS */ const $e7faa41e98dbf5c2$var$createMdjTable = (tableContainer, county = \"\")=>{\n    const columnConfigs = [\n        {\n            class: \"caret-cell\",\n            header: {\n                text: \"\",\n                unit: \"\"\n            },\n            sortable: false,\n            searchable: false\n        },\n        {\n            class: \"county-name-cell\",\n            header: {\n                text: county !== \"\" ? \"Name\" : \"\",\n                unit: \"\"\n            },\n            sortable: true,\n            searchable: true\n        },\n        {\n            class: \"total-cases-cell number-cell\",\n            header: {\n                text: \"Total Cases\",\n                unit: \"number\"\n            },\n            sortable: true,\n            searchable: false\n        },\n        {\n            class: \"total-bail-rate-cell number-cell\",\n            header: {\n                text: \"Cash bail rt.\",\n                unit: \"percent\"\n            },\n            sortable: true,\n            searchable: false\n        },\n        {\n            class: \"viz-cell bail-dist-cell\",\n            header: {\n                text: \"Bail Types\",\n                unit: \"number\"\n            },\n            sortable: false,\n            searchable: false\n        }\n    ];\n    const initSort = {\n        col: 3,\n        dir: -1\n    };\n    if (county !== \"\") {\n        const countyMdjBailTypeData = (0, $8WpX6.MDJ_BAIL_TYPE_DATA).flatMap((row)=>{\n            const countyName = row.data[1];\n            if (countyName === county) return row.collapseData;\n            else return [];\n        });\n        return new (0, $9nP1d.Table)(countyMdjBailTypeData, columnConfigs, initSort, tableContainer);\n    } else return new (0, $9nP1d.Table)((0, $8WpX6.MDJ_BAIL_TYPE_DATA), columnConfigs, initSort, tableContainer);\n};\nconst $e7faa41e98dbf5c2$var$createBailRateTable = (el, data)=>{\n    const columnConfigs = [\n        {\n            value: 0,\n            header: {\n                text: \"Cash Bail Rate\",\n                unit: \"percent\"\n            }\n        },\n        {\n            value: 1,\n            header: {\n                text: \"Unsecured Rate\",\n                unit: \"percent\"\n            }\n        },\n        {\n            value: 2,\n            header: {\n                text: \"ROR Rate\",\n                unit: \"percent\"\n            }\n        },\n        {\n            value: 3,\n            header: {\n                text: \"Non-Monetary Rate\",\n                unit: \"percent\"\n            }\n        },\n        {\n            value: 4,\n            header: {\n                text: \"Nominal Rate\",\n                unit: \"percent\"\n            }\n        },\n        {\n            value: 5,\n            header: {\n                text: \"Denial Rate\",\n                unit: \"percent\"\n            }\n        }\n    ];\n    /**\n   * Transform the table element in the el variable so that the thead\n   * has an item for each value in columnConfigs. Not using the table class since it's\n   * a bit more powerful and isn't meant to output one record.\n   *\n   * Add a data element for each header element.\n   */ const table = document.createElement(\"table\");\n    const thead = document.createElement(\"thead\");\n    const tbody = document.createElement(\"tbody\");\n    const tr = document.createElement(\"tr\");\n    const dataRow = document.createElement(\"tr\");\n    columnConfigs.forEach((config)=>{\n        const th = document.createElement(\"th\");\n        th.textContent = config.header.text;\n        tr.appendChild(th);\n        const td = document.createElement(\"td\");\n        td.textContent = (0, $ge6e3.toPercent)(data[config.value][\"value\"]);\n        dataRow.appendChild(td);\n    });\n    thead.appendChild(tr);\n    tbody.appendChild(dataRow);\n    table.appendChild(thead);\n    table.appendChild(tbody);\n    el.appendChild(table);\n};\n/* RENDER PAGE */ const $e7faa41e98dbf5c2$var$mdjContainer = document.getElementById(\"mdj-container\");\nif ($e7faa41e98dbf5c2$var$mdjContainer !== null) $e7faa41e98dbf5c2$var$createMdjTable($e7faa41e98dbf5c2$var$mdjContainer);\nconst $e7faa41e98dbf5c2$var$counties = (0, $gnvXE.COUNTY_DATA).map((county)=>county[\"name\"]);\n$e7faa41e98dbf5c2$var$counties.forEach((name)=>{\n    const tableContainer = document.getElementById(`${name.toLowerCase()}-mdj-container`);\n    if (tableContainer !== null) $e7faa41e98dbf5c2$var$createMdjTable(tableContainer, name);\n});\nconst $e7faa41e98dbf5c2$var$headerConfig = [\n    {\n        title: \"Cash Bail\",\n        className: \"cash-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    },\n    {\n        title: \"Unsecured\",\n        className: \"unsecured-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    },\n    {\n        title: \"ROR\",\n        className: \"ror-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    },\n    {\n        title: \"Nonmonetary\",\n        className: \"nonmonetary-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    },\n    {\n        title: \"Nominal\",\n        className: \"nominal-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    },\n    {\n        title: \"Denied\",\n        className: \"denied-bar\",\n        render: (value)=>(0, $ge6e3.toPercent)(value)\n    }\n];\n$e7faa41e98dbf5c2$var$counties.forEach((name)=>{\n    const rowContainer = document.getElementById(`${name.toLowerCase()}-dist-row-container`);\n    if (rowContainer !== null) {\n        const data = (0, $8WpX6.COUNTY_BAIL_TYPE_DATA).filter((row)=>row.data[0] === name);\n        new (0, $fzFsw.DistributionGraph)(rowContainer, data, $e7faa41e98dbf5c2$var$headerConfig);\n    }\n    // Adding a new type of table:\n    const tableContainer = document.getElementById(`${name.toLowerCase()}-dist-table-container`);\n    if (tableContainer !== null) {\n        const data = (0, $8WpX6.COUNTY_BAIL_TYPE_DATA).filter((row)=>row.data[0] === name);\n        $e7faa41e98dbf5c2$var$createBailRateTable(tableContainer, data[0][\"data\"][1][\"values\"]);\n    }\n}); /*\n  Produce county HTML - consider moving to templating engine if modifying HTML frequently\n  Parcel supports Pug: https://parceljs.org/languages/pug/\n*/  // const html = countyName =>\n // `\n //       <div class=\"table-container\" id=\"${countyName.toLowerCase()}-mdj-container\">\n //         <div class=\"search-container\">\n //           <div class=\"ui fluid multiple search selection dropdown\">\n //             <input type=\"hidden\" name=\"county\" />\n //             <i class=\"dropdown icon\"></i>\n //             <div class=\"default text\">Select judges</div>\n //             <div class=\"menu\"></div>\n //           </div>\n //         </div>\n //         <table class=\"mdj-table\">\n //           <thead></thead>\n //           <tbody></tbody>\n //         </table>\n //         <div class=\"btn-text view-all-btn\"></div>\n //       </div>\n //       <div id=\"${countyName.toLowerCase()}-dist-row-container\" class=\"dist-row-container\"></div>\n // `\n // console.log(counties.sort((a, b) => a.localeCompare(b)).map(name => html(name)).join(\"\"))\n\n\n//# sourceMappingURL=mdjs.ee212fff.js.map\n","import { Table } from \"./classes/Table.js\";\nimport { DistributionGraph } from \"./classes/Graph.js\";\nimport {MDJ_BAIL_TYPE_DATA, COUNTY_BAIL_TYPE_DATA, BAIL_POSTING_DATA} from \"./data.js\";\nimport { toPercent } from \"./helpers\";\nimport {COUNTY_DATA, STATE_DATA} from \"./raw-data.js\";\n\n/* TABLE CREATION FUNCTIONS */\nconst createMdjTable = (tableContainer, county = \"\") => {\n  const columnConfigs = [\n    {\n      class: \"caret-cell\",\n      header: {\n        text: \"\",\n        unit: \"\"\n      },\n      sortable: false,\n      searchable: false\n    },\n    {\n      class: \"county-name-cell\",\n      header: {\n        text: county !== \"\" ? \"Name\" : \"\",\n        unit: \"\"\n      },\n      sortable: true,\n      searchable: true\n    },\n    {\n      class: \"total-cases-cell number-cell\",\n      header: {\n        text: \"Total Cases\",\n        unit: \"number\"\n      },\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"total-bail-rate-cell number-cell\",\n      header: {\n        text: \"Cash bail rt.\",\n        unit: \"percent\"\n      },\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"viz-cell bail-dist-cell\",\n      header: {\n        text: \"Bail Types\",\n        unit: \"number\"\n      },\n      sortable: false,\n      searchable: false\n    }\n  ];\n  const initSort = { col: 3, dir: -1 };\n  if (county !== \"\") {\n      const countyMdjBailTypeData = MDJ_BAIL_TYPE_DATA.flatMap(row => {\n        const countyName = row.data[1];\n        if (countyName === county) {\n          return row.collapseData;\n        } else {\n          return [];\n        }\n      });\n    return new Table(countyMdjBailTypeData, columnConfigs, initSort, tableContainer);\n  } else {\n    return new Table(MDJ_BAIL_TYPE_DATA, columnConfigs, initSort, tableContainer);\n  }\n};\n\nconst createBailRateTable = (el, data) => {\n  const columnConfigs = [\n    {\n      value: 0,\n      header: {\n        text: \"Cash Bail Rate\",\n        unit: \"percent\"\n      }\n    },\n    {\n      value: 1,\n      header: {\n        text: \"Unsecured Rate\",\n        unit: \"percent\"\n      }\n    },\n    {\n      value: 2,\n      header: {\n        text: \"ROR Rate\",\n        unit: \"percent\"\n      }\n    },\n    {\n      value: 3,\n      header: {\n        text: \"Non-Monetary Rate\",\n        unit: \"percent\"\n      }\n    },\n    {\n      value: 4,\n      header: {\n        text: \"Nominal Rate\",\n        unit: \"percent\"\n      }\n    },\n    {\n      value: 5,\n      header: {\n        text: \"Denial Rate\",\n        unit: \"percent\"\n      }\n    }\n  ];\n\n  /**\n   * Transform the table element in the el variable so that the thead\n   * has an item for each value in columnConfigs. Not using the table class since it's\n   * a bit more powerful and isn't meant to output one record.\n   *\n   * Add a data element for each header element.\n   */\n  const table = document.createElement(\"table\");\n  const thead = document.createElement(\"thead\");\n  const tbody = document.createElement(\"tbody\");\n  const tr = document.createElement(\"tr\");\n  const dataRow = document.createElement(\"tr\");\n\n  columnConfigs.forEach((config) => {\n    const th = document.createElement(\"th\");\n    th.textContent = config.header.text;\n    tr.appendChild(th);\n\n    const td = document.createElement(\"td\");\n    td.textContent = toPercent(data[config.value]['value']);\n    dataRow.appendChild(td);\n  });\n\n  thead.appendChild(tr);\n  tbody.appendChild(dataRow);\n  table.appendChild(thead);\n  table.appendChild(tbody);\n  el.appendChild(table);\n};\n\n/* RENDER PAGE */\nconst mdjContainer = document.getElementById(\"mdj-container\")\nif (mdjContainer !== null) {\n  createMdjTable(mdjContainer);\n}\n\nconst counties = COUNTY_DATA.map(county => county[\"name\"]);\ncounties.forEach((name) => {\n  const tableContainer = document.getElementById(`${name.toLowerCase()}-mdj-container`)\n  if (tableContainer !== null) {\n    createMdjTable(tableContainer, name)\n  }\n});\n\nconst headerConfig = [\n  {\n    title: \"Cash Bail\",\n    className: \"cash-bar\",\n    render: (value) => toPercent(value)\n  },\n  {\n    title: \"Unsecured\",\n    className: \"unsecured-bar\",\n    render: (value) => toPercent(value)\n  },\n  {\n    title: \"ROR\",\n    className: \"ror-bar\",\n    render: (value) => toPercent(value)\n  },\n  {\n    title: \"Nonmonetary\",\n    className: \"nonmonetary-bar\",\n    render: (value) => toPercent(value)\n  },\n  {\n    title: \"Nominal\",\n    className: \"nominal-bar\",\n    render: (value) => toPercent(value)\n  },\n  {\n    title: \"Denied\",\n    className: \"denied-bar\",\n    render: (value) => toPercent(value)\n  },\n];\n\ncounties.forEach((name) => {\n  const rowContainer = document.getElementById(`${name.toLowerCase()}-dist-row-container`)\n  if (rowContainer !== null) {\n    const data = COUNTY_BAIL_TYPE_DATA.filter(row => row.data[0] === name);\n    new DistributionGraph(rowContainer, data, headerConfig);\n  }\n\n  // Adding a new type of table:\n  const tableContainer = document.getElementById(`${name.toLowerCase()}-dist-table-container`);\n  if(tableContainer !== null) {\n    const data = COUNTY_BAIL_TYPE_DATA.filter(row => row.data[0] === name);\n    createBailRateTable(tableContainer, data[0]['data'][1]['values']);\n  }\n});\n\n\n/*\n  Produce county HTML - consider moving to templating engine if modifying HTML frequently\n  Parcel supports Pug: https://parceljs.org/languages/pug/\n*/\n// const html = countyName =>\n// `\n//       <div class=\"table-container\" id=\"${countyName.toLowerCase()}-mdj-container\">\n//         <div class=\"search-container\">\n//           <div class=\"ui fluid multiple search selection dropdown\">\n//             <input type=\"hidden\" name=\"county\" />\n//             <i class=\"dropdown icon\"></i>\n//             <div class=\"default text\">Select judges</div>\n//             <div class=\"menu\"></div>\n//           </div>\n//         </div>\n//         <table class=\"mdj-table\">\n//           <thead></thead>\n//           <tbody></tbody>\n//         </table>\n//         <div class=\"btn-text view-all-btn\"></div>\n//       </div>\n//       <div id=\"${countyName.toLowerCase()}-dist-row-container\" class=\"dist-row-container\"></div>\n// `\n// console.log(counties.sort((a, b) => a.localeCompare(b)).map(name => html(name)).join(\"\"))\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$9nP1d","$fzFsw","$8WpX6","$ge6e3","$gnvXE","$e7faa41e98dbf5c2$var$createMdjTable","tableContainer","county","columnConfigs","class","header","text","unit","sortable","searchable","initSort","col","dir","Table","MDJ_BAIL_TYPE_DATA","countyMdjBailTypeData","flatMap","row","countyName","data","collapseData","$e7faa41e98dbf5c2$var$createBailRateTable","el","table","document","createElement","thead","tbody","tr","dataRow","value","forEach","config","th","textContent","appendChild","td","toPercent","$e7faa41e98dbf5c2$var$mdjContainer","getElementById","$e7faa41e98dbf5c2$var$counties","COUNTY_DATA","map","name","toLowerCase","$e7faa41e98dbf5c2$var$headerConfig","title","className","render","rowContainer","COUNTY_BAIL_TYPE_DATA","filter","DistributionGraph"],"version":3,"file":"mdjs.ee212fff.js.map"}